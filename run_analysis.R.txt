
#########################################################################################################
#########################################################################################################
library(data.table)
library(plyr)
library(dplyr)
#########################################################################################################
#########################################################################################################
#1) Download data (Human Activity Recognition Using Smartphones Data Set) 

setwd("C:/")
getwd()
if(!dir.exists("week4.project")){
  dir.create("week4.project")
}

URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
destfile <- "C:/week4.project/dataset.zip"
download.file(URL,destfile)

#1.2) Unzip the folder
setwd("C:/week4.project")
unzip("dataset.zip")

#######################################################################################################
#######################################################################################################
#2) Read activity labels data (y) 
y.test <- read.table("C:/week4.project/UCI HAR Dataset/test/y_test.txt") 
y.train <- read.table("C:/week4.project/UCI HAR Dataset/train/y_train.txt") 
activity_type <- dplyr::bind_rows(y.test, y.train)

#check results
tbl_df(activity_type)


#2.1) Appropriately label the data set with descriptive activity names


activity_labels <- read.table("C:/week4.project/UCI HAR Dataset/activity_labels.txt")

activity_labels$V1 <- factor(activity_labels$V1)
activity_labels$V2 <- factor(activity_labels$V2)
activity_type$V1 <- factor(activity_type$V1)

activity_data <- full_join(activity_type,activity_labels, by="V1") 

activitydata_colnames <- as.character(c("activity_labels", "activity_type"))
activity_data <- activity_data %>% setNames(activitydata_colnames)

#check results
tbl_df(activity_data)

#####################################################################################################
#####################################################################################################
#3) read subject data (x) 

subject.test <- read.table("C:/week4.project/UCI HAR Dataset/test/subject_test.txt") 
subject.train <- read.table("C:/week4.project/UCI HAR Dataset/train/subject_train.txt") 
subject <- dplyr::bind_rows(subject.test, subject.train)

#Create a colname and check results

colnames(subject) <- "subject"
tbl_df(subject)

#####################################################################################################
#####################################################################################################

#clean the environment before starting work wirh features
rm(list = ls()[!ls() %in% c("activity_data","subject")])

#####################################################################################################
#####################################################################################################
#4) Reading test and train data collected from the accelerometer and gyroscope 

feature.test <- read.table("C:/week4.project/UCI HAR Dataset/test/X_test.txt")
feature.train <- read.table("C:/week4.project/UCI HAR Dataset/train/X_train.txt")
features <- dplyr::bind_rows(feature.test,feature.train)
dim(features)

#4.1) assign features labels 

features_labels <- read.table("C:/week4.project/UCI HAR Dataset/features.txt")
features_labels <- as.character(features_labels$V2)
features <- features %>% setNames(features_labels)

#####################################################################################################
#####################################################################################################
#5) create combine data set

combined_dataset  <- dplyr::bind_cols(activity_data, subject, features)
combined_dataset
#####################################################################################################
#####################################################################################################

#clean the environment 
rm(list = ls()[!ls() %in% ("combined_dataset")])

#####################################################################################################
#####################################################################################################
#6) Appropriately labels the data set with descriptive variable names
colnames(combined_dataset)

names(combined_dataset) <- gsub("^t","Time", names(combined_dataset))
names(combined_dataset) <- gsub("^f","Frequency", names(combined_dataset))
names(combined_dataset) <- gsub("Acc","Accelerometer", names(combined_dataset))
names(combined_dataset) <- gsub("Gyro","Gyroscope", names(combined_dataset))
names(combined_dataset) <- gsub("Mag","Magnitude", names(combined_dataset))
names(combined_dataset) <- gsub("BodyBody","Body", names(combined_dataset))
names(combined_dataset) <- gsub("-"," ", names(combined_dataset))

#####################################################################################################
#####################################################################################################
#7) Create a second, independent tidy data set with the average of each variable 
#for each activity and each subject 

final_dataset <- aggregate(combined_dataset, by=list(activity = combined_dataset$activity_type, 
subject = combined_dataset$subject), mean)

final_dataset <- subset(final_dataset, ,-c(subject, activity_labels, activity_type))
#####################################################################################################
#####################################################################################################
#####################################################################################################
#####################################################################################################